// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int                      @id @default(autoincrement())
  name          String
  count         Int
  price         Int
  discountRate  Decimal                  @map("discount_rate")
  description   String
  country       String
  Category      Category?                @relation(fields: [categoryId], references: [id])
  categoryId    Int?                     @map("category_id")
  ProductCode   ProductCode?             @relation(fields: [productCodeId], references: [id])
  productCodeId Int?                     @map("product_code_id")
  products      ProductsOnProductSizes[]
  productImages ProductImage[]
  products2     ProductsOnUsers[]
  hearts        Heart[]

  @@map("products")
}

model ProductCode {
  id          Int       @id @default(autoincrement())
  productCode Int       @map("product_code")
  products    Product[]

  @@map("product_codes")
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  imageUrl  String   @map("image_url")
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")

  @@map("product_images")
}

model ProductSize {
  id           Int                      @id @default(autoincrement())
  size         String
  productSizes ProductsOnProductSizes[]

  @@map("product_sizes")
}

model ProductsOnProductSizes {
  id            Int          @id @default(autoincrement())
  ProductSize   ProductSize? @relation(fields: [productSizeId], references: [id])
  productSizeId Int?         @map("product_size_id")
  Product       Product?     @relation(fields: [productId], references: [id])
  productId     Int?         @map("product_id")

  @@map("products_product_sizes")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]

  @@map("categories")
}

model User {
  id       Int               @id @default(autoincrement())
  email    String
  password String
  name     String
  createAt DateTime          @default(now()) @map("create_at")
  users    ProductsOnUsers[]
  hearts   Heart[]

  @@map("users")
}

model ProductsOnUsers {
  id        Int      @id @default(autoincrement())
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?     @map("user_id")
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")

  @@map("products_users")
}

model MainPageImage {
  id       Int    @id @default(autoincrement())
  imageUrl String @map("image_url")

  @@map("main_page_images")
}

model Heart {
  id        Int      @id @default(autoincrement())
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?     @map("user_id")

  @@map("hearts")
}
